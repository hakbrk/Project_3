<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet3 (N_Gas_Prod)' inline='true' name='federated.1x50u680asr1wr19qmb750wt6l0y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='N_Gas_Prod' name='excel-direct.1d9bjgx1ld999y10uu9x41yfn9ua'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/shilpa/Desktop/Desktop/RICE_DATA/Project_3/Shilpa_Project_3/For Tableu/N_Gas_Prod.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1d9bjgx1ld999y10uu9x41yfn9ua' name='Sheet3' table='[Sheet3$]' type='table'>
          <columns gridOrigin='A1:G51:no:A1:G51:0' header='yes' outcome='2'>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='NG_Prod' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='real' name='NG_Cons' ordinal='4' />
            <column datatype='real' name='F6' ordinal='5' />
            <column datatype='real' name='World_Rigs' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NG_Prod</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NG_Prod]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>NG_Prod</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NG_Cons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NG_Cons]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>NG_Cons</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World_Rigs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[World_Rigs]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>World_Rigs</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G51:no:A1:G51:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column datatype='real' hidden='true' name='[F4]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[F6]' role='measure' type='quantitative' />
      <column caption='NG Cons' datatype='real' name='[NG_Cons]' role='measure' type='quantitative' />
      <column caption='NG Prod' datatype='real' name='[NG_Prod]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='World Rigs' datatype='real' name='[World_Rigs]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NG_Cons]' derivation='Sum' name='[sum:NG_Cons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NG_Prod]' derivation='Sum' name='[sum:NG_Prod:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[World_Rigs]' derivation='Sum' name='[sum:World_Rigs:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Entity,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Entity:nk]' />
          <groupfilter function='level-members' level='[none:Year:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.451247' measure-ordering='alphabetic' measure-percentage='0.548753' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Entity:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;World&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Entity:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;World&quot;</bucket>
                <bucket>&quot;[federated.1x50u680asr1wr19qmb750wt6l0y]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;World&quot;</bucket>
                <bucket>&quot;[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:NG_Prod:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#83afd2'>
              <multibucket>
                <bucket>&quot;World&quot;</bucket>
                <bucket>&quot;[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:Number of Records:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;World&quot;</bucket>
                <bucket>&quot;[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:World_Rigs:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;World&quot;</bucket>
                <bucket>&quot;[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:NG_Cons:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Oil_Prod_Rearranged' inline='true' name='federated.1q8bk451dzmbv914o0qc001l2qhx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Oil_Prod_Rearranged' name='excel-direct.1qszz5t0tm17zj15au2xp1ppb6yi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/shilpa/Desktop/Desktop/RICE_DATA/Project_3/Shilpa_Project_3/For Tableu/Oil_Prod_Rearranged.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1qszz5t0tm17zj15au2xp1ppb6yi' name='Oil_Prod_Cons_Rigs' table='[Oil_Prod_Cons_Rigs$]' type='table'>
          <columns gridOrigin='A1:J56:no:A1:J56:0' header='yes' outcome='6'>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='Total_Production' ordinal='2' />
            <column datatype='real' name='F4' ordinal='3' />
            <column datatype='string' name='Entity 1' ordinal='4' />
            <column datatype='integer' name='Year 1' ordinal='5' />
            <column datatype='real' name='Total_Consumption' ordinal='6' />
            <column datatype='real' name='F8' ordinal='7' />
            <column datatype='real' name='F9' ordinal='8' />
            <column datatype='real' name='World_Rigs' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[Oil_Prod_Cons_Rigs]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Oil_Prod_Cons_Rigs]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Production]</local-name>
            <parent-name>[Oil_Prod_Cons_Rigs]</parent-name>
            <remote-alias>Total_Production</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[Oil_Prod_Cons_Rigs]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity 1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Entity 1]</local-name>
            <parent-name>[Oil_Prod_Cons_Rigs]</parent-name>
            <remote-alias>Entity 1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year 1]</local-name>
            <parent-name>[Oil_Prod_Cons_Rigs]</parent-name>
            <remote-alias>Year 1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Consumption]</local-name>
            <parent-name>[Oil_Prod_Cons_Rigs]</parent-name>
            <remote-alias>Total_Consumption</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F8</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F8]</local-name>
            <parent-name>[Oil_Prod_Cons_Rigs]</parent-name>
            <remote-alias>F8</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F9</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F9]</local-name>
            <parent-name>[Oil_Prod_Cons_Rigs]</parent-name>
            <remote-alias>F9</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World_Rigs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[World_Rigs]</local-name>
            <parent-name>[Oil_Prod_Cons_Rigs]</parent-name>
            <remote-alias>World_Rigs</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Oil_Prod_Cons_Rigs]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J56:no:A1:J56:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column datatype='real' hidden='true' name='[F4]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[F8]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[F9]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Total Consumption' datatype='real' name='[Total_Consumption]' role='measure' type='quantitative' />
      <column caption='Total Production' datatype='real' name='[Total_Production]' role='measure' type='quantitative' />
      <column caption='World Rigs' datatype='real' name='[World_Rigs]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year 1]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
      <column-instance column='[Total_Consumption]' derivation='Sum' name='[sum:Total_Consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total_Production]' derivation='Sum' name='[sum:Total_Production:qk]' pivot='key' type='quantitative' />
      <column-instance column='[World_Rigs]' derivation='Sum' name='[sum:World_Rigs:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Entity:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;World&quot;</bucket>
                <bucket>&quot;[federated.1q8bk451dzmbv914o0qc001l2qhx].[sum:Total_Production:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;World&quot;</bucket>
                <bucket>&quot;[federated.1q8bk451dzmbv914o0qc001l2qhx].[sum:World_Rigs:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;World&quot;</bucket>
                <bucket>&quot;[federated.1q8bk451dzmbv914o0qc001l2qhx].[sum:Total_Consumption:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Model_Data (Model_Data_Rev1)' inline='true' name='federated.01ii0n10nwu2qb1bdutnt1arvg1s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Model_Data_Rev1' name='excel-direct.1w342at1273kda159v1rs1fq06g6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/shilpa/Desktop/Desktop/RICE_DATA/Project_3/Shilpa_Project_3/For Tableu/Model_Data_Rev1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1w342at1273kda159v1rs1fq06g6' name='Model_Data' table='[Model_Data$]' type='table'>
          <columns gridOrigin='A1:J539:no:A1:J539:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Active_Rig_Count' ordinal='1' />
            <column datatype='real' name='Offshore_Rig_Supply' ordinal='2' />
            <column datatype='real' name='Offshore_Rig_Active' ordinal='3' />
            <column datatype='real' name='Offshore_Utilization_Rate' ordinal='4' />
            <column datatype='real' name='Land_Rig_Active_Count' ordinal='5' />
            <column datatype='real' name='Crude_Price_2010_USD' ordinal='6' />
            <column datatype='real' name='Adjusted_Nat_Gas_Price_2010' ordinal='7' />
            <column datatype='real' name='World_Oil_Cunsump' ordinal='8' />
            <column datatype='real' name='World_Oil_Production' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Model_Data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active_Rig_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active_Rig_Count]</local-name>
            <parent-name>[Model_Data]</parent-name>
            <remote-alias>Active_Rig_Count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offshore_Rig_Supply</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Offshore_Rig_Supply]</local-name>
            <parent-name>[Model_Data]</parent-name>
            <remote-alias>Offshore_Rig_Supply</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offshore_Rig_Active</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Offshore_Rig_Active]</local-name>
            <parent-name>[Model_Data]</parent-name>
            <remote-alias>Offshore_Rig_Active</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offshore_Utilization_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Offshore_Utilization_Rate]</local-name>
            <parent-name>[Model_Data]</parent-name>
            <remote-alias>Offshore_Utilization_Rate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Land_Rig_Active_Count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Land_Rig_Active_Count]</local-name>
            <parent-name>[Model_Data]</parent-name>
            <remote-alias>Land_Rig_Active_Count</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crude_Price_2010_USD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Crude_Price_2010_USD]</local-name>
            <parent-name>[Model_Data]</parent-name>
            <remote-alias>Crude_Price_2010_USD</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adjusted_Nat_Gas_Price_2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adjusted_Nat_Gas_Price_2010]</local-name>
            <parent-name>[Model_Data]</parent-name>
            <remote-alias>Adjusted_Nat_Gas_Price_2010</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World_Oil_Cunsump</remote-name>
            <remote-type>5</remote-type>
            <local-name>[World_Oil_Cunsump]</local-name>
            <parent-name>[Model_Data]</parent-name>
            <remote-alias>World_Oil_Cunsump</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World_Oil_Production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[World_Oil_Production]</local-name>
            <parent-name>[Model_Data]</parent-name>
            <remote-alias>World_Oil_Production</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Model_Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J539:no:A1:J539:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Active Rig Count' datatype='integer' name='[Active_Rig_Count]' role='measure' type='quantitative' />
      <column caption='Adjusted Nat Gas Price 2010' datatype='real' name='[Adjusted_Nat_Gas_Price_2010]' role='measure' type='quantitative' />
      <column caption='Crude Price 2010 USD' datatype='real' name='[Crude_Price_2010_USD]' role='measure' type='quantitative' />
      <column caption='Land Rig Active Count' datatype='real' name='[Land_Rig_Active_Count]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Offshore Rig Active' datatype='real' name='[Offshore_Rig_Active]' role='measure' type='quantitative' />
      <column caption='Offshore Rig Supply' datatype='real' name='[Offshore_Rig_Supply]' role='measure' type='quantitative' />
      <column caption='Offshore Utilization Rate' datatype='real' name='[Offshore_Utilization_Rate]' role='measure' type='quantitative' />
      <column caption='World Oil Cunsump' datatype='real' name='[World_Oil_Cunsump]' role='measure' type='quantitative' />
      <column caption='World Oil Production' datatype='real' name='[World_Oil_Production]' role='measure' type='quantitative' />
      <column-instance column='[Active_Rig_Count]' derivation='Sum' name='[sum:Active_Rig_Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Adjusted_Nat_Gas_Price_2010]' derivation='Sum' name='[sum:Adjusted_Nat_Gas_Price_2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Crude_Price_2010_USD]' derivation='Sum' name='[sum:Crude_Price_2010_USD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Land_Rig_Active_Count]' derivation='Sum' name='[sum:Land_Rig_Active_Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Offshore_Rig_Active]' derivation='Sum' name='[sum:Offshore_Rig_Active:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Offshore_Rig_Supply]' derivation='Sum' name='[sum:Offshore_Rig_Supply:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Offshore_Utilization_Rate]' derivation='Sum' name='[sum:Offshore_Utilization_Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[World_Oil_Cunsump]' derivation='Sum' name='[sum:World_Oil_Cunsump:qk]' pivot='key' type='quantitative' />
      <column-instance column='[World_Oil_Production]' derivation='Sum' name='[sum:World_Oil_Production:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.325279' measure-ordering='alphabetic' measure-percentage='0.674721' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01ii0n10nwu2qb1bdutnt1arvg1s]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Active_Rig_Count:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Land_Rig_Active_Count:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:World_Oil_Cunsump:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Offshore_Rig_Supply:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:World_Oil_Production:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Crude_Price_2010_USD:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Offshore_Rig_Active:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Adjusted_Nat_Gas_Price_2010:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Offshore_Utilization_Rate:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Crude Oil Price Vs Active Rig Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Model_Data (Model_Data_Rev1)' name='federated.01ii0n10nwu2qb1bdutnt1arvg1s' />
          </datasources>
          <datasource-dependencies datasource='federated.01ii0n10nwu2qb1bdutnt1arvg1s'>
            <column caption='Active Rig Count' datatype='integer' name='[Active_Rig_Count]' role='measure' type='quantitative' />
            <column caption='Crude Price 2010 USD' datatype='real' name='[Crude_Price_2010_USD]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Active_Rig_Count]' derivation='Sum' name='[sum:Active_Rig_Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Crude_Price_2010_USD]' derivation='Sum' name='[sum:Crude_Price_2010_USD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Crude_Price_2010_USD:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Active_Rig_Count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Crude_Price_2010_USD:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Active_Rig_Count:qk] + [federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Crude_Price_2010_USD:qk])</rows>
        <cols>[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{A87C5146-18BC-40F3-A0C2-A2162576C774}' />
    </worksheet>
    <worksheet name='Crude Oil Vs Total Rig Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Oil_Prod_Rearranged' name='federated.1q8bk451dzmbv914o0qc001l2qhx' />
          </datasources>
          <datasource-dependencies datasource='federated.1q8bk451dzmbv914o0qc001l2qhx'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column caption='Total Consumption' datatype='real' name='[Total_Consumption]' role='measure' type='quantitative' />
            <column caption='Total Production' datatype='real' name='[Total_Production]' role='measure' type='quantitative' />
            <column caption='World Rigs' datatype='real' name='[World_Rigs]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Consumption]' derivation='Sum' name='[sum:Total_Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Production]' derivation='Sum' name='[sum:Total_Production:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World_Rigs]' derivation='Sum' name='[sum:World_Rigs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1q8bk451dzmbv914o0qc001l2qhx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q8bk451dzmbv914o0qc001l2qhx].[sum:Total_Consumption:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1q8bk451dzmbv914o0qc001l2qhx].[sum:Total_Production:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1q8bk451dzmbv914o0qc001l2qhx].[none:Entity:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Entity:nk]' />
              <groupfilter function='member' level='[none:Entity:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1q8bk451dzmbv914o0qc001l2qhx].[:Measure Names]</column>
            <column>[federated.1q8bk451dzmbv914o0qc001l2qhx].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1q8bk451dzmbv914o0qc001l2qhx].[sum:World_Rigs:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1q8bk451dzmbv914o0qc001l2qhx].[Multiple Values]' scope='rows' value='Crude Oil Production / Consumption' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1q8bk451dzmbv914o0qc001l2qhx].[none:Entity:nk]' />
              <color column='[federated.1q8bk451dzmbv914o0qc001l2qhx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1q8bk451dzmbv914o0qc001l2qhx].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1q8bk451dzmbv914o0qc001l2qhx].[none:Entity:nk]' />
              <color column='[federated.1q8bk451dzmbv914o0qc001l2qhx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1q8bk451dzmbv914o0qc001l2qhx].[sum:World_Rigs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1q8bk451dzmbv914o0qc001l2qhx].[none:Entity:nk]' />
              <color column='[federated.1q8bk451dzmbv914o0qc001l2qhx].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1q8bk451dzmbv914o0qc001l2qhx].[Multiple Values] + [federated.1q8bk451dzmbv914o0qc001l2qhx].[sum:World_Rigs:qk])</rows>
        <cols>[federated.1q8bk451dzmbv914o0qc001l2qhx].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{CF4FA3BC-021F-4339-88C4-44BC675109A7}' />
    </worksheet>
    <worksheet name='Natural Gas Price vs Avtive Rig Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Model_Data (Model_Data_Rev1)' name='federated.01ii0n10nwu2qb1bdutnt1arvg1s' />
          </datasources>
          <datasource-dependencies datasource='federated.01ii0n10nwu2qb1bdutnt1arvg1s'>
            <column caption='Active Rig Count' datatype='integer' name='[Active_Rig_Count]' role='measure' type='quantitative' />
            <column caption='Adjusted Nat Gas Price 2010' datatype='real' name='[Adjusted_Nat_Gas_Price_2010]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Active_Rig_Count]' derivation='Sum' name='[sum:Active_Rig_Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Adjusted_Nat_Gas_Price_2010]' derivation='Sum' name='[sum:Adjusted_Nat_Gas_Price_2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Adjusted_Nat_Gas_Price_2010:qk]&quot;' user:op='manual' />
          </filter>
          <slices>
            <column>[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[Multiple Values]' scope='rows' value='Natural Gas  2010 Price ($)' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Active_Rig_Count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.01ii0n10nwu2qb1bdutnt1arvg1s].[sum:Active_Rig_Count:qk] + [federated.01ii0n10nwu2qb1bdutnt1arvg1s].[Multiple Values])</rows>
        <cols>[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{272D5D9B-B8F5-44CD-9EF6-3DBC9E119126}' />
    </worksheet>
    <worksheet name='Natural Gas Vs Total Rig Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet3 (N_Gas_Prod)' name='federated.1x50u680asr1wr19qmb750wt6l0y' />
          </datasources>
          <datasource-dependencies datasource='federated.1x50u680asr1wr19qmb750wt6l0y'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column caption='NG Cons' datatype='real' name='[NG_Cons]' role='measure' type='quantitative' />
            <column caption='NG Prod' datatype='real' name='[NG_Prod]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='World Rigs' datatype='real' name='[World_Rigs]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NG_Cons]' derivation='Sum' name='[sum:NG_Cons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NG_Prod]' derivation='Sum' name='[sum:NG_Prod:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World_Rigs]' derivation='Sum' name='[sum:World_Rigs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x50u680asr1wr19qmb750wt6l0y].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:NG_Cons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:NG_Prod:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1x50u680asr1wr19qmb750wt6l0y].[Exclusions (Entity,Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Entity:nk]' />
                <groupfilter function='level-members' level='[none:Year:qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Entity:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Year:qk]' member='1986' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1x50u680asr1wr19qmb750wt6l0y].[none:Entity:nk]'>
            <groupfilter function='member' level='[none:Entity:nk]' member='&quot;World&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1x50u680asr1wr19qmb750wt6l0y].[none:Year:qk]' included-values='in-range'>
            <min>1985</min>
            <max>2016</max>
          </filter>
          <filter class='quantitative' column='[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:NG_Cons:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:NG_Prod:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:Number of Records:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:World_Rigs:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1x50u680asr1wr19qmb750wt6l0y].[:Measure Names]</column>
            <column>[federated.1x50u680asr1wr19qmb750wt6l0y].[none:Entity:nk]</column>
            <column>[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:NG_Cons:qk]</column>
            <column>[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:NG_Prod:qk]</column>
            <column>[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:Number of Records:qk]</column>
            <column>[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:World_Rigs:qk]</column>
            <column>[federated.1x50u680asr1wr19qmb750wt6l0y].[Exclusions (Entity,Year)]</column>
            <column>[federated.1x50u680asr1wr19qmb750wt6l0y].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:World_Rigs:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1x50u680asr1wr19qmb750wt6l0y].[Multiple Values]' scope='rows' value='Natural Gas Production / Consumption' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1x50u680asr1wr19qmb750wt6l0y].[none:Entity:nk]' />
              <color column='[federated.1x50u680asr1wr19qmb750wt6l0y].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1x50u680asr1wr19qmb750wt6l0y].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1x50u680asr1wr19qmb750wt6l0y].[none:Entity:nk]' />
              <color column='[federated.1x50u680asr1wr19qmb750wt6l0y].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1x50u680asr1wr19qmb750wt6l0y].[sum:World_Rigs:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1x50u680asr1wr19qmb750wt6l0y].[none:Entity:nk]' />
              <color column='[federated.1x50u680asr1wr19qmb750wt6l0y].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1x50u680asr1wr19qmb750wt6l0y].[Multiple Values] + [federated.1x50u680asr1wr19qmb750wt6l0y].[sum:World_Rigs:qk])</rows>
        <cols>[federated.1x50u680asr1wr19qmb750wt6l0y].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{1FB09893-0413-4B5E-88C5-D223B4B1F365}' />
    </worksheet>
    <worksheet name='blabla'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{02827B2C-1EA4-4C9F-B1E9-D89225F0380E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='9' param='vert' type='layout-flow' w='84000' x='8000' y='8000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DCB7E7EE-EA70-446F-AB33-4A05756F34DC}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Natural Gas Vs Total Rig Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1x50u680asr1wr19qmb750wt6l0y].[none:Entity:nk]&#10;[federated.1x50u680asr1wr19qmb750wt6l0y].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x50u680asr1wr19qmb750wt6l0y].[:Measure Names]</field>
            <field>[federated.1x50u680asr1wr19qmb750wt6l0y].[none:Entity:nk]</field>
            <field>[federated.1x50u680asr1wr19qmb750wt6l0y].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77EF274F-B433-4BF7-B152-4885C82261CD}' />
    </window>
    <window class='worksheet' name='Crude Oil Vs Total Rig Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1q8bk451dzmbv914o0qc001l2qhx].[none:Entity:nk]&#10;[federated.1q8bk451dzmbv914o0qc001l2qhx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1q8bk451dzmbv914o0qc001l2qhx].[:Measure Names]</field>
            <field>[federated.1q8bk451dzmbv914o0qc001l2qhx].[none:Entity:nk]</field>
            <field>[federated.1q8bk451dzmbv914o0qc001l2qhx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F7FF675C-B7CA-42BE-8DCB-5C48B5886059}' />
    </window>
    <window class='worksheet' name='Crude Oil Price Vs Active Rig Count'>
      <cards>
        <edge name='left'>
          <strip size='193'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='102'>
            <card pane-specification-id='1' param='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[:Measure Names]</field>
            <field>[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE994B03-643A-4532-9BEE-4484EE386C7D}' />
    </window>
    <window class='worksheet' name='Natural Gas Price vs Avtive Rig Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01ii0n10nwu2qb1bdutnt1arvg1s].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00B99B6E-B65A-4F33-938C-53A64DD0D2DB}' />
    </window>
    <window class='worksheet' maximized='true' name='blabla'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C11A78A4-49EE-4D90-AEBB-0D11578F4874}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{79EFB8C4-637F-4B0B-A6E2-4A1DB989F246}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Crude Oil Price Vs Active Rig Count' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crude Oil Vs Total Rig Count' width='192'>
      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
      7wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Natural Gas Price vs Avtive Rig Count' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXiV9Z3//+d99uwLZCFhCUiQRRBEVNxwqxSVpda61Fq10zqd2tbamXY6
      l52ZTn/dnGlH59u9ztiK1eIu1g1EKKKIsoawhwCBsAVC9rPey++PSASE5JDlHMh5Pa6LC0ju
      9/m875OT+3XO594Mx3EcREQk5biS3YCIiCSHAkBEJEUpAEREUpQCQEQkRSkARERSlAJARCRF
      KQBERFKUAkBEJEV5kt2AiEh3hUIhTNPE7/fj8/mS3c5ZRwEgImetRx99lA0bNuDz+Rg1ahT3
      338/2dnZn1jOsix++9vf8uUvf5lAIJCETs9MmgISkbNWc3Mz9913H//5n/+JZVn87ne/w3Ec
      tmzZwlNPPcXzzz9Pc3MzFRUVvPHGG7z88susXbsW0zR5++23efzxx9m5c2eyVyNpFAAiclbz
      +XwUFBRw33338d577wGwevVqsrKy2LBhA3/4wx+wLAvbtjv+fv3113njjTcoLi7moYceIhwO
      J3ktkkMBICL9gt/vxzRNAM4991wqKyupq6ujtraWSZMmkZuby6xZs5g8eTLLly8nLy+PlpYW
      IpEINTU1Se4+ORQAInLWs22bF154gYkTJ9LW1sbPf/5zbr/9du6///6OZQzDIBQKARAIBMjI
      yKCsrIzvfOc7FBUVJav1pNJOYBE5qz3yyCP4fD7y8vJ46KGHOo4G+uMf/0h9fT1+vx+32815
      553Hd7/7XWbNmsXs2bN5+OGHaWxspL6+nu9973vk5uYmeU0Sz9D9AETkbNXY2Eg4HMbj8ZCT
      k4PX6wXg8OHD1NfXU1JSgmma5OXlEYlE2LVrF/n5+QwcOJCGhgbq6+vJz88nPz8fwzCSvDaJ
      pwAQEUlR2gcgIpKiTroPIBwO09bWluheREQkgc7aKSDLsmhpaUnJHTciIr1BU0AiIikqoYeB
      mqZJRUUFRz90uN1uxo4di8fjYc2aNYTDYSZPnkx6ejq7d++mtLQUt9vN/v37SUtL07t9EZFe
      lNAAcLlcZGZm4jgOpmny1ltvMWbMGBYvXozf7yc/P5/58+dz22238f777zNr1ixs2+aVV17h
      i1/8IpZlYVkW0H7iRywWIxKJJHIVRET6jYQHwLnnngtAZWUlEydOxOPxUFtbyz333INhGGza
      tImWlhagfSM/f/58ZsyYQVpaGo7jdByra1kWbrcbj0fnsomIdEdStp6WZbF69WpuueUWbNvG
      7/d3bNgzMjKIRqOEw2GefvppiouLGTp0KNB+KvfR5RzHweVy4Xa7k7EKIiJnvaTsBN62bRul
      paVkZmZiGAa2bXd8zzRN3G43fr+fG2+8kT179hAMBpPRpohIv5bwAHAchxUrVnDJJZcAdEzh
      1NfXE4lEOHz4cEcw5OXlMXPmTJ599tnjQkJERHou4VNAR44cYeTIkWRmZgLt0zo33HADr7zy
      Co7jMG3aNHw+H0VFRbjdbgYPHsy4ceOoqqrq2H8gIiI9d8acCGbbNo7jxD2nrxPBRER65ow5
      hMbl0jlpIiKJpK2uiEiKUgCIiKQoBYCISIpSAIiIpKgzZiewnDk21xwiGrO6XC4vK42hRTkJ
      6EhE+oICQD7hv59dQV1D1zcEmjZxGN++dWoCOhKRvqApIBGRFKUAEBFJUQoAEZEUpQAQEUlR
      CgARkRSlABARSVEKABGRFKUAEBFJUQoAEZEUpQAQEUlRCgARkRSlABARSVEKABGRFKUAEBFJ
      UQoAEZEUpQAQEUlRCgARkRSlABARSVEKABGRFKUAEBFJUQoAEZEUpQAQEUlRCgARkRSlABAR
      SVEKABGRFKUAEBFJUQoAEZEUpQAQEUlRCgARkRSlABARSVEKABGRFJXwADBNk5qaGg4fPozj
      OACEQiFqamqIxWIARKNRTNMEwHEc2traEt2miEi/l9AACAaDPPHEE+zYsYMPP/yQ1tZWGhoa
      eOKJJ6iuruaJJ54gGo2ybt06tm/fjuM4vP3222zZsiWRbYqIpARPIgd7//33ufLKKxk5ciSG
      YQCwaNEirrvuOkaOHInH4+nY8DuOw65duzh8+DDXXnttItsUEUkJCQsAx3Gora0lFAqxZs0a
      cnNzufrqq2loaGDq1KkAlJaWsnfvXvx+P5WVlRw5coS77rqrIyxM0+yYGrJtm2g0SjAYTNQq
      pIyjU3NdsUxLz7/IWSyhnwAMw2DKlCnk5OTw/vvvs379egzD6NjgOI6Dy9U+K5WTk0NTUxOh
      UIiMjIz2Zj0ePJ72li3LIhqNkp6enshVSAlHA7crbo9bz7/IWSxh+wAMw6CoqIiWlhb8fj+l
      paWEQiEKCgrYvXs3ADt37qS4uBiAoUOHMnv2bF566aWOncMiItJ7EroT+PLLL2fJkiXMnz+f
      d955h/HjxzN58mTeeecdXnjhBQ4cOEBZWRkulwvDMCgsLOTSSy/ltddei3taQkRE4mM4Cd6y
      Oo5Dc3MzmZmZuN1uoH0+v7W1laysrLinHyzLoqWlhdzc3L5sNyV95b/+Sl1D14feTps4jG/f
      OjUBHYlIX0joPgBonwrKyck57msul4vs7OxEtyIiktJ0JrCISIpSAIiIpCgFgIhIilIAiIik
      KAWAiEiKUgCIiKQoBYCISIpK+HkA0n9957dvcfBIa5fLXTJuMF+bMyUBHYlIZxQA0mtaghGa
      2iJdLhcM69pOImcCTQGJiKQoBYCISIpSAIiIpCgFgIhIilIAiIikKAWAiEiKUgCIiKQoBYCI
      SIrSiWD92NJ1uwhHzS6XKxmYxfgRRQnoSETOJAqAfmzugvUcbgp2udw1F5QpAERSkKaARERS
      lAJARCRFKQBERFKUAkBEJEUpAEREUpQCQEQkRSkARERSlAJARCRFKQBERFKUAkBEJEUpAERE
      UpQCQEQkRSkARERSlAJARCRFKQBERFKUAkBEJEUpAEREUpQCQEQkRSkARERSlAJARCRFJTQA
      bNumsbGRhoYGGhsbsSwLgFAoRE1NDbFYDIBoNIppmgA4jkNbW1si2xQRSQkJDYD9+/fz9NNP
      895777F8+XKCwSANDQ088cQTVFdX88QTTxCNRlm3bh3bt2/HcRzefvtttmzZksg2RURSgieR
      g9XV1XHZZZdx/vnnd3xt0aJFXHfddYwcORKPx9Ox4Xcch127dnH48GGuvfbaRLYpIpISEhoA
      LS0t7N69m5qaGs455xzGjh1LQ0MDU6dOBaC0tJS9e/fi9/uprKzkyJEj3HXXXRiGAYBpmh1T
      Q7ZtE41GCQaDiVyFs4rjOHEtZ5rWcc9jvHXWiXV2nHWWpZ+byBkgoQFwySWXMGnSJCKRCAsW
      LCAzMxPDMDo2OI7j4HK1z0rl5OTQ1NREKBQiIyOjvVmPB4+nvWXLsohGo6SnpydyFc4qR4Oz
      Kx6P+7jnMd4694l1rjjr3G793ETOAAnbB+A4DrFYjMzMTAYMGMCwYcNoaWmhoKCA3bt3A7Bz
      506Ki4sBGDp0KLNnz+all17q2DksIiK9J6GfAFatWsXOnTtJT08nGAxy2223UVZWxp///Gc2
      b95MMBjk6quvpqGhAcMwKCws5NJLL+W1115j9uzZcb8zFRGRriUsAAzDYNq0aVx++eWEw2HS
      09M7Nuj33Xcfra2tZGVlYRgGU6ZM6agbN24c48aNS1SbIiIpI6GfAKB9/vfonP5RLpeL7Ozs
      RLciIpLSdCawiEiKUgCIiKQoBYCISIpSAIiIpCgFgIhIilIAiIikKAWAiEiKUgCIiKSohJ8I
      JtJbXnt/G42tkS6Xu2LCUIYW5SSgI5GziwJAzlpvflDN7rqmLpcrK85RAIichKaARERSlAJA
      RCRFKQBERFKUAkBEJEUpAEREUpQCQEQkRSkARERSlAJARCRFKQBERFKUAkBEJEXpUhCSdE8v
      qqSxJdzlcueU5jH9opEJ6EgkNSgAJOnerdzN3kMtXS53aWiIAkCkF2kKSEQkRekTwFngP/60
      lOa2ri97fNGYUm67ZlwCOhKR/kABcBbYtb+RIy2hLpcrK85NQDci0l9oCkhEJEXpE0ACVWw/
      QMy0u1yuIDedYXo3LyJ9TAGQQL945n2a4pjLv37KOdz/mSkJ6EhEUpkCQFJKNGZRe6g5rmUL
      8zLITPP1cUciyaMAkJRy4EgrD/5qQVzL/tNtU7ni/GF93JFI8vRoJ3AoFMJxHAAcxyEU6vpI
      FREROTP0KAAeffRRWltbAWhra+Phhx/ulaZERKTvdWsKyHEcnn76aTZu3MgzzzxDIBCgrq6u
      t3sTEZE+1O19AAMHDiQQCDBgwADS0tIYOnQoF154YW/2JiIifahbAWAYBtOnT2fy5MnYto1h
      GADEYrFebU5ERPpOj44C+t3vfsfevXvx+/0AnH/++dx777290piIiPStHgVAfX09P/vZz8jJ
      yemtfkREJEF6FAAjRoxg2bJllJaWApCbm8vw4cN7pTEREelbPQqA4uJitm7dytatWwEoLy9X
      AIiInCV6FAAzZ87Etj++uJnb7Y6rrrq6mpaWFiZOnIjjOFRWVlJVVcXkyZMpKyvjwIED+Hw+
      8vPzaWlpYe/evYwePbonrYqIyAl6vBN4y5YtADQ3NzNx4kS++93vdlrT0tLCkiVLSE9PZ+LE
      iVRXV7NlyxZmzJjBvHnzuPXWW6mpqSE7O5ucnBxeeOEFZsyY0ZM2RUTkJHoUAN/85jc7LgVx
      8OBBnnzyyU6XdxyHBQsWcM0117Bq1SoANm/ezLRp08jKyuKiiy6iqqqqY/lly5YxatQoioqK
      ALBtu2M827axbRvLsnqyCmckx3GOWy8HJ866E5+POOtsp1vP4yf6jG+4T9TF2Wa3n5djXye2
      Hf969tfXl8hRPQqA6upqmpvbr6zY0NDA7t27O11+8+bN5OXlMWjQoI6vBYNBsrOzAcjOzqam
      poa0tDQWLlyIy+Xia1/7WseyjuN0TDlZloVt25im2ZNVOCM5TvfWy3Gc4+ri3SDbJ9TFW+jY
      J9TFHVQn9NnNunj7PPZ1Ylld34/hKKufvr5EjupRAKxbt46amhoAXC4XX/nKV065rG3bvPnm
      m4wZM4YlS5ZQU1PDhg0bCAQChEIh0tLSCAaDBAIBAK6++mp27txJZWUlEydOBNr3MRzdz+By
      ufB4PB3nIPQnLpf7uPUyMLpXZ8RX53a7jn8e46xznVAX73guV2/VxXcpq2NfJ15vOK4aAG8/
      fX2JHNWjALj55pvZunUru3btYuTIkYwcOfKUyxqGwT333IPjOITDYQ4dOkRZWRm2bbNmzRqu
      vPJK1q1bx6c+9Sl27tyJ1+tlxowZzJ07l5KSEgoLC3vSqoiInKBHAfD000+zYcMGxo4dy9tv
      v81ll13GzTfffNJlDcMgPz8fgGg0yujRo8nMzGTcuHEcOHCA5557jvLycgoKCmhtbSUQCODz
      +bjllluoqKigoKAg7neKIiLStR4FwIcffsjDDz9Meno6ra2t/Ou//uspA+BYPp+Piy++GGif
      1rn++uuP+/6IESM6/p2bm8u0adN60qaIiJxEjwJgwIABLFiwgAkTJrB69WqKi4t7qy8REelj
      PQqABx98kHnz5vH4449zzjnncP/99/dWX2e0uQsqiES7PjpkbFkBl40fmoCO+gcXNoXuBkZ4
      9jHQ3cRBK48as5iDVh5Oz+5dJCIn0a0AaGpqYtOmTVxyySX8/d//PQB79+6lurqa888/v1cb
      PBMtXFlNSzDa5XKW7SgAOuFYMZzWg0xybeC6zE2M9e5igLuZgPHxZcUjjpd6K5vNsWF4zcnY
      jUMwsgZhuL1J7Fykf+hWAHzwwQccPHiQqVOndnzN6/Uyd+5cfvGLX/Rac9K/GNjkuNoY2FpJ
      +G/vYO1dg91Qw+12G6S1H9YfdnxUmyXsswYwwrOfAe4mSjz1lHjqoX4NbXPn4sodgrtkEuMt
      F2HXQBrsTGIoEEROV7cCwOVy0dTUhOM4HUfmtLS04HLpY7ocL2BEGOY5wFhvDeO8OxnsOURm
      S5jY2o8WcPvYbw1gQ7SMTdEyasxi6uxcwAAcCl0NDPMcZJR3DxMCuyn1NGLXb8eu384dLvhc
      vouDVj47zEFURkewKVZGo52VxDUWOXt0KwAuv/xy5s2bxyOPPML48eOpr6/n1Vdf5YEHHujt
      /uQsNtDVwL/kPkWRuxFof4fvYBD2DSSr/Arcg6fgLpnIo/9Xwd7WtpM8gkGdnU9dNJ+V0THs
      HD6E78wqx9q3FmvfOnZXLKXAqqXEfZhSz2GuCFSyM1bMH1pmsscqSuzKipyFuhUAgUCAX/7y
      lyxatIhNmzaRk5PDT37yE4YO1Xy3fKzEU0+Oq41GK4Ot5hDWR89ha2wo5eMm8U/XX/rxgq7K
      uB/TlVmIa9R0vKOm88t1E6iv30+5dy/nePYywVfNCM9+/jHnGX7U+EUO27l9sFYi/Ue3jwJK
      S0tj5syZvdmL9DPro+fwzfoHiDoeTNzw0SUtyntxjDYnnXXRctZFy3kpeCX/kPUyUwOb+Fb2
      c/y8+XZNB4l0QpP20ocMgk4AEw/EeT2jnrBx8WLwSuqtbMq8B/la1sv46fpoLZFU1aPzAJYv
      X87+/fs7/u/1ehk3bhwjRozQZRskKfZbA3mk+XN8J+cvjPHW8LXsl/EYVyS7LZEzUo8+ASxd
      upRIJIJhGFRUVLBjxw4efvhhDhw40Fv9iZy2XeYgHmu5ibDj4wLfNsbufwrH1mWdRU7UowBo
      bGzkpptu4uabb+bGG28kPz+fm266ic2bN/dWfyLdsi46iv9tvREHAzbMI/rB73Gc+O8FIJIK
      ehQAo0eP5mc/+xnPP/88f/zjHykvL+fw4cPk5eX1Vn8i3fZBZCx/bv0UjgPRD35PbMOLyW5J
      5IzSo30A99xzDx9++CG1tbU88MADjB49mtLSUkpKSnqrP5EeMFgYnsLkUoNxzQuILP7/MCfH
      eZs0kRTQrQDYuXMnLpeL5uZmIpEIBQUFHDp0CMdxGDt2bG/3KNIDBtaUb+CtyyJW+QKZKx/m
      PO/NbIiN6LpUpJ/r1hTQ4cOHOXLkCLt27WLjxo0df/bs2dPb/Yn0nOHCf9X3cJddThphvpo1
      n8HuumR3JZJ03foEMGXKFGzbZuTIkaSnp+N2u7Esiy1btvR2fyK9wvAESJvxMKH5Xyd33xoe
      zHmWnzXeySFb+6skdXXrE4Bt2/z0pz/lG9/4Bj/+8Y9pbm7m8ccfZ+nSpb3dn0ivMQLZhK/4
      AXvMAorcjTyQ/TwZRjDZbYkkTbcCoKqqimAwyGOPPUZpaSkPPvggDQ0NfPnLX+7t/kR6Vat7
      AP/TfAtHrCzKvAd5MPs5vMS6LhTph7oVAHV1dZSXl+P1ehk/fjwlJSV8+9vfxufz9XZ/Ir3u
      gDWAR5s/R4udxmjfHu7L+iturGS3JZJw3doH4DgOL7/8MitWrKC5uZmWlha+/vWvM2nSpI47
      hImcyXaYg/h182f4x5xnuMS/iSN2Nn9puy7ZbYkkVLcC4OKLL+axxx77xNf1CUDOHgYbYsP5
      Xcss/iFrPtelreb9yDh2mYOS3ZhIwnQrAPx+PwUFBb3di0iCGXwQGcvF/s1c5N/Cpf4NCgBJ
      KT2+HLTjOFiW5k/lbGWwIjIWx4ELfNvw6fLRkkJ6dCmI7du3M3fuXEzT5O/+7u+orKxkzpw5
      vdWbSEJsjA6n1UmjwN3IcO9+tsaGJbslkYTo0SeAxx57jLvvvpvMzEyKiopYvXp1b/WVEOGo
      GdefmKlPOP1Zm5PG+ug5uA2Hi/26kq2kjh59AnAch/z8fFwuFwcOHCAWO7uOp773Z/MJhrvu
      +cap5dw3c3ICOpJk+TAymqn+DUz0VTGPa4iiAxqk/+tRANx99938+7//O7W1tezatYsHH3yw
      t/oSSaitsaE02ZkMdDUzyruHDbFzkt2SSJ/rUQAA/Nu//RsZGRl4PB68Xm9v9CSScK1OOpWx
      EVwZWM/UwCYFgKSEHu0D2Lp1Kz/84Q95+OGHWbp0KQ0NDb3Vl0jCLQlNwnYMpvi2kGaEk92O
      SJ/r0SeAm2++mZkzZ7Jjxw6ee+45Xn/9df77v/+7t3qL27d/tYBIrOsdtddcUMZnp+l+BXJy
      NWYRB6x8BrnrmeDbAVyd7JZE+lSPAmDz5s0sXryYLVu2UFRUxO23395bfZ2WvYdbCEe7vul3
      Y6ve1cmpRfGxNjqSkvR6LvFvTHY7In2uRwFQWVnJ+PHjOw4FFTnbfRAZyw1pHzDBV81OQyeF
      Sf/WrQDYvXs3LpeLCRMm0NzczKZNmwDIy8ujvLy8VxsUSaQ9ZiH7rIGUuA8z2tkA6PUs/Ve3
      AmDfvn14PB5qamrYvXt3x9fLy8sVAHJWi+FlVWQUszMO4961GGfCbAyjx1dMETkjdSsALrnk
      EgDy8/OZPXs2Ho8H0zR1T2DpF1ZGxzAz/X3Y8yFOqBEjPT/ZLYn0iR69tfnTn/5EMNh+S722
      tjZ+9atf9UpTIsm0xyyk1iqAWBtm9eJktyPSZ7p9Q5jvf//7rF+/nh/+8Id4vV5aW1uZNGlS
      b/cnknAWbpaFJ3Bn5iLMTfPxjpuD4erxOZMiZ5xuv6q/+tWvMnfuXG655RbS09Px+Xy6R4D0
      Gx9GxnBHxiI4UInTvB8jd0iyWxLpdd2aAjIMgyFDhjBx4kQGDRrEkCFDcLvdLFy4sMta27ax
      LAvHcTq+dvSeAke/5jjOSf8tkij1djbbzcFgm5oGkn6rR/sAlixZ0nH9n0AgwJIlSzpdvqKi
      gieffJJ58+bx/PPPE4lEiEajPPPMMzz99NO8+eab2LbNpk2bqKmpAdrvObBixYqetCnSDQaN
      hVcAENu2AMfq+kRDkbNNjwKgsLCQF198ka1btzJv3jyGDev8RhojR47krrvu4vOf/zw5OTnU
      1tayZs0aRowYwRe+8AUikQh79+6ltbWVUChEc3MzixcvZvJkXYpZEs8z8jpwe7EPbcFurEl2
      OyK9rkd7tu6//36ee+45nnrqKUaPHs1dd93V6fIZGRkcOnSIAwcOUFdXx2WXXUZFRQXXXnst
      hmEwZswY9uzZg9vtpqGhgdWrV3PjjTd23GzeNE1s2wbAsixisRjhcBiIb4rINK2Plv9InFNL
      lnV8XbwzUifWxeuT43W3z3jr7G49L3Zv9WnHOZ59fJ3t2HHVffw6gWg0/rN7rcAAKJoA+1YT
      2boA1wVfirtW5GzQowDIyMjg7rvvpqGhgcrKShYuXMjMmTM7rdm4cSO7du0iKysLt9uNaZod
      00her5dYLIbb7Wbz5s2EQiEKCws7at1uNy5X+4cWl8uFx+P5KByMuPp1u90dYQKAEWedy3Vc
      XXxV7T0eN16c3O4T6uIc0HVCnRHn+n2iz7jr3L0yXl/Xffw64bQuWe72ePCdO4PovtU4O5fi
      m/J34NYlz6X/6FYAWJbFoUOHWLlyJStWrGDjxo1cfPHFcd0P+KqrrgJgxYoVbNiwgaysLI4c
      OUJ6ejqHDx8mNzeXcDjMpZdeSiwW47XXXmPOnDkYhtHxB9rfbRqG0REI8TAMTmv5YwuPq4tz
      g3y6/R07wLF1RpwDGnRvvO4/L92r+8TzEm+idvd5OWa8eEMDwGUYeIdPI/reo9j1VThHqnEX
      6Wqy0n90ax/A+++/z7/8y7/Q3NzMvffey+TJk7n99tsZM2bMKWscx+Gtt95i7dq1VFVVsX37
      dvLz8zn//PN566232LJlC2vXrj3uUhLjx4/H7/ezevVqHQkkSeHKHoS7ZCJYUWJb30h2OyK9
      qlsBMGDAALKzs6moqGD9+vW0trZ2ebimYRhMnToVgPr6eq655hqGDx/OoEGDuP766zly5Aif
      +9znSE9PZ/To0QwZMgTDMJg+fToDBw7s3tqJ9ALvuM8AYFYtwLF0hVDpP7o1BTRmzBj+53/+
      h7q6Ot59910ikQg/+clPmD17dqf7ADIzM096tnBpaSmlpaUd/8/Jyen4t9vtpqysrDttivQK
      95CLMNIH4LQcwNpfgWfwlGS3JNIrerQTuLCwkJtvvpk5c+bQ2trK/v37e6svkTOGKy0P95CL
      MLe+gbltgQJA+o1euc6ty+UiOzubc889tzceTuSM4z33BgDM6iWaBpJ+Qxc6F4mDu2QSRmYR
      TtshrNqVyW5HpFcoAETiYKTl4h56CTg2ZtUiHZUm/YICQCRO3vLrATC3LwI7luRuRHpOASAS
      J3fp5PZpoFAD1h5NA8nZTwEgEifDn4ln1KcBiFU+q2kgOespAEROg3f0R0cD1bwPkeYkdyPS
      MwoAkdPgGliOkVcGsSDmzneS3Y5IjygARE6D4fbhLf8UAOa2hThxXpJa5EykO12LxMGybBpa
      2+8pYBddQYDHMGtX0XRoP6Y/77hls9J8+H361ZIzn16lInE4cKSVrz3yesf//ysvn0Ec4X9/
      +yuWRc4/btkHb72EqyaWJbhDkdOnKSCRblgRGYvjwEX+zRhx3pFO5EyjABDphg8jY7BwMdq7
      m8HuumS3I9ItmgIS6YY9ViHrouVc6N/KFzIX8l9Nd2D24q9Tc1uEuQsq4lr2mguGM7asoNfG
      lr5hHdmBtes9PKOm48os7LogARQAIt1i8Ezb1Yzx1jDGW8N1aat5M3Rxrz16KGry1qodcS17
      7tCBCoAznBNtJfzXb2Ef2UFs03zSZv8KV1ZxsttSAIh0135rIC8Er+SujIXMSV9GRfQc9lu6
      e518klW3BfvITgDsQ1sIvfJN0mb9D66sQcct5zgO897eENdjjhteyIRzinrUlwJApAf+FprE
      FN8Wxvh2c3fmAv6z6Y7jvm/ZNk2tkbgeKyPg1eGj/ZRZ9Rbg4C69ELu5FrtuE6G/fou0mx7F
      lX18CMxbvDGux7z1ahQAIskUxcuTrdfz/dwnGefdyTWBNcClHd+va2jjq794La7HeuCWi7nm
      guF91KkkixMLY+5cChh4J92JK6+M0Iv3YR/cSOjVb5E289FPfBJIFB0FJNJDu9i/pc4AACAA
      SURBVK1i5gcvwzDgtozFDHDpGkHyMevgBpzmfRjp+XgGT8E9sJy0m/+AkVHQHgKvPIATakhK
      b/oEINILFoQuYrJ/G6O8tZxT/Vuc836J4Tp7fr2ipkXF9gNxLTusKJfCvIw+7qj/sHa9C46N
      u/RCjLRcgI4QCL30D+3TQa98g7TZvwF/VkJ7O3teoSJnMBMPj7fcwH/kPY5/1zJiG1/GN/6W
      ZLcVt9ZglB/NXRbXsn8/azI3XFLexx31D45jY+56FwD38MuP+557YDlpc35NaP7XsfatIzT/
      fgKzf53Q/jQFJNJLaq0CXglejuNAdPmvsBt3J7slSTL7cBX2kR3gz8Yz5JOHCbsLziVt9i8x
      skuw9q0l9PLXSDPCCetPASDSawxeC17CHkpxgoeJvPsI2Faym5IkMnf8Dawo7qJxGKc47t9d
      MJq0Wf8PI2sQ1r51/GP2M6QboYT0pwAQ6UUmHg6MewA8aZjb3ya29Y1ktyRJ4jjOR4d/gqf8
      UxjGqTe37oLRHSeHjfbt4cHs58hIQAgoAER6mbtoLL4pXwLHxrP61+S6WpLdkiSB3ViDXb8d
      PGl4hl3a5fLt00G/os0OMMa3m29lP9fnnwQUACJ9wHfB3bgKxpBlN3JnxlvJbkeSwNz+Ntgm
      7uLxGHEe5+8qOJf/arqN1o9C4NvZz/bpPgEFgEgfMHzpBK79PngCXOTfzCX++E7vl/7Bcez2
      AOCj6R+XO+7a7eYQft50G812Gud69/BPOfP67JOADgMV6SOu4gn4Jn2B6Mr/5QsZb7E5WkaT
      k9mnY7aGojy5YH1cy06bOEwXkesjTvN+7AOV4PbiGTHttOu3m0N4tOlzPJDzPKM8tXwr+zn+
      u/k2wo6/V/tUAIj0EcMwCI65kz3LX6XMc4DPZ77Fb1vmAEafjRmOmrz54fa4lh1RktvjALAs
      m5qDTXEtOyAnjZyMQI/GO1uY2xcBDu5BEzG6eennbeZQ/l/zLXwz+wXGeHdzb+Yb/K5lFk4v
      TtwoAET6UJgAf267nu/lPMVU/0Y+jIxldfTcZLfVa1pDUR781YK4lv3KTRdw06Wj+rij5HNs
      C3PHEgA8I6/t0RnhW2ND+U3zbL6d8yyXBTawOTaUv4Un0VtvIrQPQKSPbY0N4e3QZFwG3Jm5
      kByjNdktSR9ygvVYdZvB5cEz/PSnf060MTacV4KX4TjwhYy3KPPEd8mOeOgTgEifM3ghOI2J
      /iqK3Q3cmrGE/2u9EVvvv/ola88HEG2jyTeYD7aFcFyd39jnnJI8RpTkdbKEwV+DlzHKU8sE
      XzVfyforP2q8+xNLLVq1I667Uw8vzmXk4HxAASCSECHHz/+23MhDOX/mskAla6LlrI6OTnZb
      /YLj2ACdnmiVKI5jE9u2EIDFDWW88PKaLmvuuPa8LgIAbFz8rmUWP83/A8M8ddyVuYAWY+Jx
      y/z6pZXYTtcRcMtVYzsCIPnPmEiK2BIbxsLwFDyGzZeyXufLmX/lU4GVnOOpTchZn/2RE2ok
      /Pp3CD55M7GNLye7HZy2eqy9q7AdWBXp3YBvcTL4bfMcTMfF5f5Kphire/yY+gQgkjAGL7Zd
      SYGrkYm+Kq5KqwAqsByDsOPDt/5Vws0XtV83xjcYP1Ei+JLd9BnLCTUSevXbWLUfAhBe9APs
      5n34LvoKhtublJ6s2g8h0oKRO4yawz27W9fJbIyV8XLwCm5OX0rh1sewxk/FXTim24+nABBJ
      oDYnjV82f5bxvh2M8u7hHM9eCtyN5LlacDdsJdawlRgQcHn5Rb6fvdZAqs0StsWGsM8cQJOd
      qVAAnHBzx8bfSMvHPWwq5tY3iK74LXZTLYFrHsLwfXzPAtt24j5cNS8rQG7m6R+uety1f865
      Grb3xeG+7RccLPfu4XxjB+EFD5H+uT9hBLK79WgKAJEEi+FhTXQUa6KjAIc0I0K+q5mvXJLO
      mPRDWPsrsJtqybYayXW3Ms63C4CI46XJTidoB2h10jliZVFvZzNoXx2xbaNxZRWDlUGO0UoE
      LxHH26vHjJ8pnGiQ0Bv//NHGP4/AjT/HXTqZWPEEIst+gbn5FUJthwh8+qe4MgYC7Te8+dYv
      34zr8b84fQKfnTb29PtqO4y1dzW43HjOuRbYetqPEY8YXh5vuYF/zZ3LwMPbCC99mMCnftit
      x1IAiCSVQcgJsNcK0DDoYgIXDMdxbOoP7udnv3maIZ46zvXuYajnIANdTQxwNVPoPuGdbPW7
      hKvb/+kzXPxnvpc2J402O0Crk0aDnUVldAQbo8Npds7uO3k5ZoTwkh9j7VoG/iwCMx7GM+Qi
      ALwTP4+RPYjwgoewdr9P6MWvkHbjf+PKT8x9lq19a3BCDRjZpbiLz6OvAgCg3s5l+YB7mNXy
      O8xNr2AOvhDiOgboeAkNAMdxaG1tpa6ujsLCQjIz20+Lb21t5cCBAwwdOhS/3084HMbtduP1
      erEsi7a2NrKzu/cRR+RsYxguLH8uVeYQqswhLA5PBiDbaKXA3UiWK8QAVzPZrjbyXc2MH+Sm
      0BfEaa3DCTcTMGKkGVEKXI0YH81CXBlYT6OVwVvhC1kYmkLIOfvOyHXMKJElP8XcNB9cHtKm
      /+S4q2wahoH3nGtw3fwYoVe/jX24iuDzXyJww39B4cROHrkXenMczKr2o388I68FI/5r/3Tb
      4EvwZcaIrvgt4SU/YZDri+y1Tu/M7oQGwKpVq9i6dSuDBw9m4cKFfPazn8XtdvPcc88xfvx4
      Fi9ezL333ktFRQXZ2dmMHj2ahQsXUlxczKRJkxLZqsgZp9nJpNn85LWEvj7+IoZfOAKA+oZm
      vvuLp8lyBclxtZHnamGgq4kp/s2UeI7wuYylXBdYzRuhi/Eb5yd6FbrNsWJElvyE2IbnsRyD
      55xbqV/hhRXvnrzAuo85zh8obdtH6OV/gGn/2q1xTcvm5/OWd7lcOkHuqH+fgOHGO/K6bo11
      +gx8F30Fa986rN3v8/XsF/lh492nFe4JDYCxY8dy4YUXtie110tdXR379u1j+vTpDB/e/jFt
      27ZtHctv376d1tZWJk7s2/QW6S8cl4fDdi6H7dzjvv5S8AquCKxnVvp7FLibuCPjbYyKzUQD
      9+Edc1OSuo2P49hE3vl5+8bf8PCH5ht4LzIc6mo7rTv3mh8xLPwXzKq3sBd9nznpV/By8HJO
      5zIKtuPw/sbOxwGY7NuKP7sZI28oruLzsOMeoWcMt4/A9J8QfPpWhrQd4s6Mt3j8NE4yTGgA
      ZGRk4DgO69ato7q6mltvvZVNmzZRWNh+saRBgwZRW1uL3+9n9erVtLS0cM8992B89DnWNE1M
      0wTAtm2i0SjBYBDiOPnhaH0wGPz4C92sc7pbF1cVWFb3xutunWla3RvvxDo73j57p8524vs1
      63idAJFI/NdWP7YuHD5z62Jx1Jl4WBK+gPcj45gWqODGtPfJb9lHZNF/EFnzZ0Llt+PBxIxj
      kxCLxTrGC4Wj8fd5TF00ZvHU2xu7rDFwuMZZROmeZ8Htw5z8Dd57LUA8G/GYKw1n2r/jCgyA
      Dc9xc/pSBriaeLJ1OlFOfZhoLPbx75Fpxfcam+Crbp9uK7mQUMTEtmNx1QHEzNjx26U4mUfr
      XBm4rv4BkVe/yZWB9VSZQ1gaPvWbZvOYn0NCA8C2bf7617/i8Xi47bbb8Pv9uN1ubLv9SbYs
      C5erPblKS0vZsWMHzc3NpKWltTfr8eDxeDqWjUajpKen0zHR2QWPx9O+/FHdrDO6WxdXFbjd
      3Ruvu3Uej7t7451Y54q3z96pc8V55qfP5+uo8/vj/8U8ti7QZnavLhT/PYGPq4vEv0PPe0xd
      sIvVCzt+FoSm8F74PL4+dj/jQ3/DObKdrBU/4t9yB/FK8DIqoiOJdbJp8Hq9HePF7PiPMjq2
      zgpGWLhqV6fLGzjclPYeRRnvgMeDb+rXcJ33eXjtpfjHy8rFueZ7RPOG0Lr0Ea5OW0e+q4Xf
      t8yk+RSX5vZ6P/49ippd//y8xJjga98LHxh5NZ70dKw4gwPA6/n4eYn3zReA55g6yqfxYugy
      ZgXe4fMZi6gxi9hlnvwmNJ6Pfg5OLJjYY8RWr15NIBBgxowZ+P3t17UuLCxk586dAFRXV1NS
      UgJAcXExc+bMYf78+UQikUS2KdLPGbQ66TSX30b655/Bd/m3cGUWMMK7n29mP8/3c+cyybcN
      D/GHXu936PDptA+4JWMpHhf4Lvw7fJPv6dblHgyXB2f85/lV82cI2T7O91fznZx5DHIf7pVe
      y7215LuaMTIKcJckb7p6fvAyNsSGk+EK86XM10kzPrnddGHjadtP5P3fEPzLHYkNgO3bt7N3
      717+8pe/8NRTT7Fz504mT57MypUrefbZZ2lsbGTo0KF4PB7cbjcDBgzgqquuYsGCBaeVjCIS
      H1d6Pv4pX8b+zJ95oe1Kgk6AEZ59PJj9LN/LeYox3l105/DCnjCwuTKwjtsyFmPgEBzzBXyX
      fLVHl1UGgzXRc/lp053UW9kM9x7gn3P+wrne3T3u90L/VtyGg3vIxRhpnV/Tpy+ZjofHWm7i
      sJXNCO/+j25F2v6z8xNlgm8738x+gWt3/AvRFb/Brq9O7BTQHXfccdKv33vvvQSDQTIyMjAM
      g8mTJ3d8b9SoUYwa1f+vIS6STKY/n5eCV/K38ERuSnufq9LWMtq3h697XuLp1mt5LzKevryR
      zcccLvRt5YuZC3Bj80boYjIyZ3JTjzb+H9thlvLjxrt4MOdZBrsP8U/Z83is5SY+jI6hO+vn
      wuIC3zYcB/ZlX8w5vdJl9x2xc5jb+mm+mf08VwTWs8cqIMMIM9W/kWL3kfZZb8OFq2g83vM+
      e2acJuhyucjMzIx77llE+kaDnc2TbdP5lyP38WF4NDmuNr6S9SpT/V3vsO0NU3xb+Gr2fHyY
      LItM4C9t1/b6ZbPr7Dx+1PhF1kbLSXNF+Xr2S8xKe4/ufNJpn/5podnJYJs5pFf77K410VG8
      ErwMt2FzV+Zb3JyxjEGeI4QcPwuCU1g1+sdk3PEXfONv0ZnAIvJJdXY+v2mZQ5uzgKvT1vLl
      rFcJ2gEqYiP7bMwLfVv4++xX8GHyQWQMj7Xc1GeXsmi/JtPN3JaxhE+nf8jnMv5GkbuBua3T
      T+NRHKb4tuAyHDZGymix0/qk1+54NTiVbFcbl/srqbUKWBS6kLXRctqcALe4hnUspwAQkZMy
      8TC3dTpew+TyQCXfyH6B/2y6A5jcZe3pMHC4KrCWOzMW4SfGishY/tAys8+vYxTDy9Nt11Fn
      53J7xmKuDFSQ724m7IrvMs5ubCb52++/vCpyLuV92expiuLjT60zeK7tasKOD4uTn5l8RkwB
      iciZKYaHJ1o/zbrIOQRcMR7MeY7hTud3uDodHkw+m76UuzPfxG9EeScygf9tuYlYJ8fp9yYb
      FwtDU/hl8820OQHG+3YypfpHWIe6vo5PmecARe4GWu0AG2OJud7Q6TFoc9JOufEHBYCIdCHk
      +PlNyxw2RYeRaYQYsv4nWAc39fhx040wX8p6ndnp72IAfw1eyhMtM5JwuWuDtdFR/KzpTg6Y
      edCwg9CLf4+5851Oahwu9G8B2q/R33YWXlsJFAAiEoegk8YjzZ+jyizFbqsn9Nq3sRt2dfvx
      vNEGvpX9LFcG1hPDzROt03k+eFWnZ+j2tV3mIH7a9AWq7aE4wcOEXv1HYhXPYJxk57AHq+Pk
      r/Y7f52dB7AoAEQkLiEnwKNNt7LPHojTVEvw5fuxm7q+Ts6xHMfBqt+O+fJXGOPdTZvt55Gm
      W1kcntzrR/t0R72dw/YJ/4Fn9I1ghrCW/oTbM97GOOHqPoXuBkrdh4k5brbEhiap255L/jMu
      ImeNZieD6vP/P9xDLsJprMF69esM9+yLr9iMtN+s5dm7sY/sZFNsGD9uvIvKWLKPnj+e4csg
      MP3H+C57AFdmATemr+CB7OcZ5tnfscxF/s14DJsN0eE02llJ7LZnFAAiclqMrGLSPvM7PGNm
      4Q/W8lDuk4z21nRak220Ubzup4QXPIQTCxKb/A/8rOlOdlvFCer69BguD74pXyZw65+pjg3i
      Qv82/jV3Llf4K0gzwlwRWI/jwJLwJJyzdPoHFAAi0g2G20fgmodwj7iKgBHjweznGHWKyyoU
      u+v5p5y/MMpc334Xr0//FN+FXzrjb1dpGAZ2ZjEPN32elZFz8RPjS1mv8+WsVyl0NdLmBNgY
      PROP/onfmf0TEJEzluHLgKv/g43RMjJcYR7Ifp4Rnr3HLOEwyrubf855mhHeAxjZg0ib/Wu8
      oz4N3bioW7IEnTR+3fwZXg1NxYXNxf4tGAZURM9JwhFLvevs+SmIyBkn5srgf5o/y+boULKN
      IN/IfpES9yEMHC7yb+Yfs5+lwN3ELrOIyjH/jqf0gmS33C0mHp5tu5onW68nZPsI2j7eC49P
      dls9pjOBRaRHgk4a/6/5s/xz7tOUeQ7yreznWRU9lxlpH+DBYm1kJL9vmcUdRmGyW+0RBxeL
      wlPYHCsj29XG5lhZslvqMX0CEJEea3EyeKTpVg5aeZR46pmVvhwPFovDF/Cr5ptpddK7fpCz
      xF6roF9s/EEBICK9pN7O4WeNn2dbbDANVibz2q7hj603nPXz5P2ZpoBEpNccsvP4ceNdeA2T
      sKMN/5lOASAivcrCjeWc+gJkcubQFJCISIpSAIiIpCgFgIhIilIAiIikKAWAiEiKUgCIiKQo
      BYCISIpSAIiIpCgFgIhIilIAiIikKAWAiEiKUgCIiKQoBYCISIpSAIiIpCgFgIhIilIAiIik
      KAWAiEiKUgCIiKQoBYCISIpSAIiIpCgFgIhIilIAiIikKAWAiEiKSngAOI7DkSNHsG274/8t
      LS1UVVURiUQACIfDxGIxAGzbprm5OdFtioj0ewkNgPr6eubOncv//d//dWzgjxw5wlNPPUVd
      XR1/+tOfiEajVFRUsH37dhzHYcGCBVRXVyeyTRGRlOBJ5GCmaTJnzhzefPPNjq+tXr2a6dOn
      M3z4cAC2bdvW8b3t27fT2trKxIkTE9mmiEhKSGgAFBUVfeJrjY2NFBYWAjBo0CBqa2vx+/2s
      Xr2alpYW7rnnHgzDANoDxDRNoH1qKBqNEgwGwXHiGt80zfblj+pmndPduriqwLK6N15360zT
      6t54J9bZ8fbZO3W2Y8dV1/E6ASKRcFw1J9aFw2duXay748Vix9RF4h/vmLpQONqtunA4Fn+f
      0WPGi5jdGi8Ss06j7uPfI9OK7zUGYB4znh3naxogZsaO3y7FO94n6uL8fT+mz4QGwMm43e6O
      /QGWZeFytc9KlZaWsmPHDpqbm0lLSwPA4/Hg8Xg6lo1Go6Snp8NHAdEVj8fTvvxR3awzulsX
      VxW43d0br7t1Ho+7e+OdWOeKt8/eqXMZ8c1g+ny+jjq/P/4Nz7F1gbb4NzzH1YXi3/AcVxeJ
      fwPiPaYuGP/q4fN6O+rCZryvTvAeUxez459FPrbOIv7A8fk+rsMV/woeO54rGv/Pz+v9+Pco
      asb/8/Mcu36nERxez8d18b75AvAcU9fOIJ4QOLbPpB8FVFhYyM6dOwGorq6mpKQEgOLiYubM
      mcP8+fM7dg6LiEjvSWgArFmzhmeffZZdu3bx4osvsnHjRiZPnszKlSt59tlnaWxsZOjQoXg8
      HtxuNwMGDOCqq65iwYIFp5WMIiLStYROAV1wwQVccMEFn/j6vffeSzAYJCMjA8MwmDx5csf3
      Ro0axahRoxLZpohISkj6PgAAl8tFZmZmstsQEUkpSd8HICIiyaEAEBFJUQoAEZEUpQAQEUlR
      CgARkRSlABARSVEKABGRFKUAEBFJUQoAEZEUpQAQEUlRCgARkRSlABARSVEKABGRFKUAEBFJ
      UQoAEZEUpQAQEUlRCgARkRSlABARSVEKABGRFKUAEBFJUQoAEZEUpQAQEUlRCgARkRSlABAR
      SVEKABGRFKUAEBFJUQoAEZEUpQAQEUlRCgARkRSlABARSVEKABGRFKUAEBFJUWdEADiOg2ma
      OI7T8f9j/23bdjLbExHplzzJbiAajfLCCy9gWRb5+fl8+tOfZvPmzWRkZFBWVkZVVRX19fVM
      nTo12a2KiPQrSf8EsGbNGkaOHMmdd95JNBpl7969tLa2EgqFaG5uZsmSJVx44YXJblNEpN9J
      egDs27ePUaNGYRgGY8eOZc+ePQA0NDQwf/58brrpJrxeb5K7FBHpf5I+BWSaZscG3uPxEIvF
      cLvdbN68mVAoREFBQZI7FBHpn5L+CSArK4v6+noADh06RG5uLgCXXnop06ZN49VXX+3YISwi
      Ir0n6QEwceJEFi1axObNm1m3bh3l5eUd3zvvvPNIS0tj1apVCgERkV6W9Cmg4uJipk+fzu7d
      u7n11ltJT09n9OjRuN1uDMNg+vTpHfsFRESk9yQ9AAzDoKSkhJKSko6v5eTkdPzb5XIxbNiw
      ZLQmItKvnTQAotEooVAo0b2cFtu2CYVCGIZBWUGAaMzqsibLB01NTR3/LxsYIBztOgOz/cfX
      DRsQIJjpPu26oQMDtGV0PeuWEzi+bsgAP7lpXZaRm3ZCXb6fbH/XU2e5AeMTdZnerk++y0s7
      vq40z0+au+ufQ176CXW5PvxG1ys4IN11XF1JnhcPXde57GhHXTQcZERhHE8m4HI+rouE4q9z
      HzNeOBSKv+6Y8cLBcNx1XmIddaG2yGnUmR/XhaJx1/mMj+vawrH461zHjBcx467zHzNeJGbF
      XRc4ZryYeRp1bqujzrTsuOvSjqmzHSfuunSPfdzrOt66DO8n6+w4psozjhnPcE4yuX70GHyR
      M5HjOBiG0ec1qlNdf687aQCcDY5eIsLt7vqd+LFM0wTaDzlVXfLqLMvCtu3TPseju3WRSASf
      z3favyzdrYtGo3g8Hlyu0zvOQnW9WxeLxXC5XKe9nUiVuqQfBSQiIsmhABARSVFn9RQQcMqP
      5seu1rHL2LbdPvfVSV3H/FgXdfHMv8Uz3sn67Gz9TlVzbP8nflQ+8cccb92pxj5a39V4xy4X
      T11njxFP3am+H+/P4cTv99brpavX6+n2eeJjdVbX2dinquvq9dJVn6cau6vxTvV89cXzcrTu
      THy9HF22r18v7h/84Ac/6HSEM9TJVnrz5s0UFBTgOA4rVqxg1apVNDc3U1JS0rHsyeqqqqrI
      z8/Htm1ee+01tm3bxr59+xg6dGjHC+Nkda+++ipNTU0UFRWdcoN0srqDBw/y1ltvEYlEaG1t
      ZenSpezfv59hw4Z1Ol4kEuGdd96hoqKCVatWUVtbS3Z2NpmZmZ2OFwqFWLJkCZWVlWzdupUt
      W7bgOA4DBw7s9Hk5mYMHD7J//34GDBhwyrr9+/ezZMkSDh48yNChQzEMg7q6Og4ePEh+fv4p
      6w4fPtzxvLhcLhYuXMju3bsZOnRoxxznqZ6XaDRKLBajrq6O9evXU1BQgMfjOeX6maZJdXU1
      AwYMwDRNFi1axPr163G73R3rdrI627aprq4mLy+P5uZm3njjDaqqqmhrazvuUOYT6yzLYt68
      efj9fgYMGHDK5/pkG4GtW7eybNky0tPT2bp1Kx988AHBYLDT8QAaGxtZvHgxFRUVrF+/ngMH
      DlBYWIjf7++0rr6+nrfffptNmzaxZcsWtm3bRlZWFtnZ2Z3Wncy6devIzMzsGPNkdRs3bmTF
      ihVEIhGKioowDIPKykqysrLw+XynrKuqquLdd98lPT2dgwcP8s4771BfX9/xmjtVXSgUIhaL
      EYvFaGtr45133qGkpKTj3KNT1R3dvti2zbvvvsvatWsJhUIUFxfHtX2JRCK8/vrrVFVVUVdX
      x5AhQzqte+GFF4hEIhQWFp7W9mXPnj0sXrwYx3Goq6vjvffe49ChQyd9XvrVFND27dsBOHLk
      CC0tLcyaNYtwOMz+/ftPWWNZFtu2bQPaf8AjR45k5syZFBUVsWPHjk7HcxyHgoICXnnlFZYv
      X04kEumyR8dxWLlyJTfccAOxWIza2lrmzJlDfn4+1dXVnda9+eabjBw5klmzZjFw4ECuvPJK
      VqxYwcGDBzutW7BgAePHj2fWrFnMmjWLm266iQMHDlBVVdVprzt37mTjxo3H/dm6dSvRaLTL
      9ZsxYwaDBg1i2bJlOI5DOBymra2t07rly5czffp0gsEg77zzDjfccAPl5eVs2bKl0z6ff/55
      3nzzTZYtW8bKlSs7NpJHd1CfjGma7Ny5E4DKykqGDRvGrFmzOq5BdSrBYJDdu3cDsHLlSqZN
      m8asWbNoaWmhsbGx0/XLzc0lFArx0ksvUVlZiWV1fcisbdts27aNmTNnsnHjRjIzM/nMZz7D
      4cOHOz1Sz7ZtXn31VaZOncqsWbPIy8vjggsu4LXXXuv052fbNm+++SZXXXUVs2fPZvbs2Vx/
      /fUsX768yyMDN23a9InXy44dOzo9i99xHKqqqrjxxhtpaWlh69atQHt4dfbzcxyHDRs2MGPG
      DDZv3sz27duZM2cOsVjsuEMjT+b3v/89ixcvZtmyZSxfvpwdO3awbNmyLn9/j25famtrcbvd
      zJo1i4MHD3Y6nmmaHb9nlZWVTJgwgZkzZ5KWltbpdgnA6/WSkZHB/PnzWblyJbFYrNPlof15
      Wbt2LTfeeGPHdnDOnDl4PJ6TjtevAuCoQ4cOUVZWhtvtZvDgwTQ0NJxyWcMwsCwLy7KIxWJk
      ZmZ2pGRXT7hhGAwfPpw5c+YwePBg3njjDd59990uX0gulwu/309BQQGBQACXy8WAAQNobW09
      ZY1t23g8no53wy6XC5/Px8UXX0xNTU2ndYZhUFRU1FHn9XoZOXJkpxssgC1bttDS0oLf7z/u
      Tzw8Hg/l5eUd75jjYRgGgUCA8847D4BAIEBubi4tLS2d1s2aNYv09HRKSkq44oorGD9+PFdf
      fXXcRwo1NDQwePBgPB4PBQUFnf4c3G434XD4/2/vTN+aSLM2fqeSyk525NvghgAAF/NJREFU
      EgIEkrCENaC2y9jiDPYyM9c19ozoh/kvp2VRu8W2HRtEBdmDARQICWsSAmRPpWo+8NbzWi2p
      Kuxu32t8+3zSMj9PpVL1LOc+5xSAk4dNq9WSP0sN6BRFobe3F9988w0oisLg4CBmZmZEX3hU
      Lpeh0+mgUqlgMBhgs9lAURQsFovohFosFuFyuWC1WqFWq1EqlWC329Ha2iq6YGAYBmazGUaj
      8SRLhKKg1Wrh8XgkJ4CXL19CoVAI7hWp7DA+k4+iKFy5cgXhcBjJZFKUAU6uN03TUKvV8Hq9
      sFqtoCgKVqtV8n755z//CYVCgba2NnzxxRdoa2vDn//8Z+h08vLvE4kEGhsbZY0vFEWhVCqR
      +8NgMJB/kxpfKIpCa2sr/v73v8Nut2N4eBgTExOSEyN/XaxWK/kdbTbbqdfl/7wS+Nc0jUaD
      u3fvIpvN4urVqwCA9fV1nDt3riJDURSCwSCGhoZQVVWFpaUluFwupNNp/PWvf5Xll6IoNDQ0
      oL6+HltbWygUChUHSoVCAbPZjMePHyOXy0Gr1WJ+fh4rKyvo7+8X9WE2mzE5OQmj0YhCoQCa
      ppFOp2G1WitySqUSXq8X3377LTweD9RqNQ4PD7G7u4u//OUvot/r2rVrmJqaQnNzMzmm1+sl
      J9Ta2lqsr6/D5/Ohr68Po6OjSKfTaG1tFeU0Gg2y2SwMBgMuX74M4KRduFRH2KqqKnz99dcI
      h8N48eIFCTOJmVKpRDqdxuDgIA4ODnDlyhWUy2XE43FcunSpIqfVauF2uzE8PIxcLoenT5+S
      QVqOX+Bkcuzs7EQgEMDGxgYYhiGhjp8bTdPI5/P46aefwDAM5ufnsb+/j2g0iosXL1b0odFo
      UCgUsLS0hOPjY3KPZLNZ0nDxNFOr1dBqtfjuu+/gdDqhUCiQSCSQzWZFrwsA9PX1IZfLCe4X
      vtFjJVMqlVCr1Tg+PobJZMIXX3yB0dFRJBIJ9PT0VOT4kEi5XEZ9fT3sdjs4jsP29jba2tpE
      fdbU1ODrr7/G9PQ0wuGwrFAWcHKPDg4O4vj4GF9++SU4jkMkEsGNGzdEz7O9vR2Dg4OgaRqx
      WAwmkwmFQgHnz5+X5VepVMLv98Pr9SISiZCU2Er+NBoNnjx5glwuR8KgoVAIf/vb397/Tv+t
      InAl4ziODI5KpRLJZBJWq1XyRy4Wi0gkEigWi4KVlpjt7+9/ULtqlmWxv78Ps9kMiqLw9u1b
      slqT4tbW1pDP59HS0kJWdvwKqpJxHIdMJoNEIkF2OQ6HQ3J1xq9a+M/xfy+Xy6I7AZZlkc/n
      odfrCZdMJqHX60VXWXzsn1+5cxyHeDwOq9Uqu85ga2sLpVJJdvsQlmVRKBSg1WrBsizS6bSg
      FUkly2azSCaTYFkWZrMZJpNJ9B5jWRbJZBIOh4Mck1vEUyqVkEgk4HA4kMvlEI1G0djYSK5v
      JSsWi1hZWYFWq4XX6wVFUSgWi5K7OI7jkEqlcHBwAI7jYDabZT0Pp9Xm5HI5qNVq0Tx1PiTF
      T4L8ROxwOES5bDZLdtC8/52dHUFMXup84/E4kskkAoGA5Od5Jp/PQ6PRQKFQ4ODgQNb4ks/n
      kUwmUSqVUFVVJYv50PGFv34WiwUcx+Ht27eor68XaDi8/deKwKfZ8PAw2fryA4ZOp5O80CMj
      IyiVSvB6vbDZbNDr9bJuoCdPniCbzcJut5+pEOPBgwcAAJfLBbVaDYfDIWv7+d1334GmabS3
      t4Om6RMV/x3hqpIdHBzg8ePHMBgM0Ov1mJiYwN7enkDkPs1SqRRGR0dRLBZRKBQwOjqKvb09
      +Hw+Ue7w8BA//PADEWdHR0dxeHgIv98vymUyGTx8+BD5fB6lUgkPHz7E4eEhGbwq2dHRER48
      eIBcLodcLoe5uTkAQHV1tWh2xMrKCp4+fYrq6mosLS1hYmICNE2TlW8lbnV1Fc+ePUNDQwO2
      t7cxNTWFcrksygEn4viTJ09gNpsRDocxPj4OhmGI8FnJ3/r6OqampmCxWLCxsUHi5FJcJBJB
      KBRCQ0MD3r59i7GxMZTLZckBMp1OY3JyEm/evEE0GkU+n4fT6ay4S3mXGxsbw+TkJObm5pBI
      JOB2u0mYrJLlcjk8e/ZMwHm9XkmuUChgfHwck5OTmJ2dJZxU4V4mkyHnubKyQhIi5HDj4+OY
      mZnB3Nwc9vf34fF4yGRQybLZLF68eIHXr19jfX0dx8fHsvwpFAqMj4/j5cuXmJmZwd7eHux2
      u6S/QqGAubk5TE9PY35+HhzHoba29lTuk9IAyuUylEol7t69i8nJSZTLZVltpPmX0vBii1yu
      VCpBo9FgaGjozJxOp8PQ0BBevHgBhmFkcfzu5Czcu+JqLpfD8vIyBgYGYLPZREVgjuMwNjaG
      r776CsViEUtLSxgYGIDD4SCiuRTHMAxCoRAGBgbgcrlExVyO4/DTTz/hq6++IgLfwMAAamtr
      EQqFJLkvv/wSCoUCLMvi9u3bWFtbQzabrcgVi0WEw2HcvHkTExMTMBgMuH37NiKRiCjHf6dv
      vvkGL1++hE6nw+3bt7G5uSkaky+Xy1hYWMDNmzcxNTUFjUaDO3fukFegVjKWZTE3N4ebN29i
      enoaKpUKd+7cwdbWligHnGTg3Lx5E7Ozs6AoCnfu3MHOzo5ojJzjONy9exednZ34xz/+Abvd
      jkAggMHBQdGYNcdxGBwcREdHB+H40Iccrq2tjXCdnZ2yuKGhIbS2thKuq6tLNtfS0kK47u5u
      DA0NSSY3DA8Po6mpCbdu3YLdbkdPTw+Gh4dFNT+e8/l8uHXrFmw2G3p7ezE8PEy0pErcyMgI
      4ex2O86fP4979+6J3p8819jYKODu379/6v35SU0AFEWho6MDAwMDsFgs+Ne//oWJiQlZYkt7
      ezsZGM/CtbW1kQv97bff4tmzZ6I3EnAyswcCAdy6dQsOhwN3797F+Pi4LK61tRUDAwNwOp24
      e/cuxsbGJDmlUgmdToe6ujro9XpQFAWXyyWZLUFRFBFXDQaDbE6hUPwizu12E87pdEpyAGAw
      GOB2u5HNZokYKPaglEolmEwmqFQqGI1GuN1uwokN5DynVCphNBpRU1NDRDYxjmEYVFVVQaVS
      oaqqiqzepbhyuQyj0QiVSgWTyUQ4u90uOpDzgqNKpYLZbCa7E4fDIcoVi0U4nU7U1NRArVaj
      UCigpqYG7e3t2NraEuWqq6vhdrsJ53K50NnZiVgsJsrZ7XbU1taCpmmS9tjd3Y1oNCrK2Ww2
      1NXVgaZp4r+np0e0fXypVILVakV9fb2A6+3tleQsFgs8Hg9UKhWKxSIcDgfOnTtHssIqcSaT
      CQ0NDeSNh3a7HRcuXBBN3uDvl3c5m82Gzz77TNQfwzAwGo1EpOa5ixcvnurvkxKBeVMoFGhu
      bobf70ckEkEul5OVEaJQKNDU1ASfz4fNzU1ks1lZ8WCFQkFEmmg0imw2K7ld/jkXi8WQyWRk
      cQDg8/nQ2NgoySkUClRVVeHHH39EOp2GTqdDKBRCOBxGX1+f6LlZLJb3uOXlZXz++eeinNVq
      xePHj0mMdnFxEaurq7hy5YooZ7PZTuV4QbgSZ7fbCed0OhEKhbCzsyPqT6fTIZlMYnx8HMBJ
      BovH48H29raoP61Wi1QqhfHxcZTLZUxNTcHj8SAWi4mKpLzQOT4+jlKphOnpaXg8HmxuboqK
      uTRNI5vNYmxsDPl8HnNzczg4OMDGxgYuXLhQkeOzlcbGxpDNZrGwsIDDw0Osra2JJkWo1Wrk
      83mEw2FkMhlUVVUBOAmz+Xw+Ua5QKOD169fI5XIk2+Xw8FBUj+F1LJ7jdY1UKgWPxyPKMQyD
      paUlFAoFEkJNpVKoq6uryNE0jXK5jFAoRHbwPCemA9A0DZZlEQqFBKJ9KpUSiN6nccBJrcO7
      PaxSqRS8Xm9FjhdvFxYWyN95rr6+XpSjKArz8/Mki4vn3G73e5//pERgXgD6nRMay7LY3d2F
      xWKBUqnE8vIyampqRAuSKnEul0tQQFaJ29vbIyvslZUVOJ3OM3E0TWN5eRnV1dWisfyfc8Vi
      EdFoFH6/X5ZIGo/H4XQ6kU6nfxHn8/kEKX5SXCaTQSQSgd/v/824UqlEhMRcLoeNjQ34fD5B
      4WAlf69fv4ZWq4Xf7ycrXl53EuPC4TDUajWamppkc/wE8CFcOByGSqVCc3PzR+GWl5dBURSa
      m5vJDuK35PgwbUtLi2yOYRgSppXiPqkdgMViwcTEBOLxOHK5HFwuF4LBoGjaGwBYrVY8f/4c
      +/v7hOvu7pbMyvk553Q6EQwGZXEvXrzA/v4+MpkM8SeVRmiz2fDy5Uvs7e0RrqurS1C5epox
      DINoNIpXr14hk8mQLb6UeFwulxGLxT6Ii0aj2N3dJZyUQPquv6mpKWQyGVmDP3AyAfAcwzBw
      u92yRPx8Po/l5WW8ePECAD6I4wU2OV0qC4UCVlZWCCfXH8+9fPkSLMueiVtdXSX6FB/mkrJi
      sUiygBYWFuB2uxEMBiV3pzyXTCaxuLiImpoa9PT0yOZ4f2flzuqPLxZLJBJYXFyEy+VCb2+v
      LI73FwqF4HK5flN/DMMglUohkUh8kL94PI5QKASn01nR3yejAXAch++//x5WqxU3btyATqdD
      a2srySSR4sxms4B79OiRZGXnw4cPYTKZCBcIBPDo0SPRPHmO4zA6Ogqj0YgbN25Ar9cjEAjg
      8ePHogUwPGcwGHDjxg0YDAYEAgE8efJENNea4zg8evQIer0e/f39MBqNCAQCePr0Kfb39yU5
      rVb7Hre3tyfK/fDDD9BoNOjv70dVVRUCgQDGxsYkK5YfP34MmqYJ19bWhmfPnmFnZ0eSU6lU
      6O/vRzAYhMPhwP3790ULZorFIoaHh9Ha2oobN25Aq9Wiuroa9+7dE+VKpdJ7nNPpxMjIiGTl
      8dDQEJqbmwlXU1MjyZXLZQwNDaGpqQn9/f2kDkGKY1kWg4OD8Pl85P6sra3F8PCwZCHR0NAQ
      vF4vOc+6ujoMDw9LiqvDw8NobGwknMfjkc01NDSgv78fOp0OjY2NsriRkRHU19eT79fY2Iih
      oSFZXG1tLTlPn8+HoaEhSTH33r17cLvd5Hfw+/0YGRmRFHPv378Pl8tFzrO5uRkjIyOiFec8
      53Q6yXk2Nzfj/v37kiLwgwcP4HA4CNfa2vrpi8Dlchk0TSMQCECn04HjOLhcLly8eBHr6+ui
      nFKpRFtbG0kZdTqduHTpkiTHi8c6nQ4URcHhcODy5cukxUAlTqFQoKOjA1qtFiqVCna7HVeu
      XBFtPcFXi3Z0dJDKUKvVij/84Q+ilbYsy4JlWXR2dkKv14OmacJJ+SuXy+jq6oJer4darYbZ
      bMbnn38u6Y9hGHR3d0Ov10Oj0cBkMuHatWuklP404zgOpVIJwWAQer0eWq0WRqMRfX19klyh
      UEBPTw/0ej2KxSL8fj/cbrfohJrJZODxeFBbW4uqqiqUSiX4/X7U1dWJTqjZbBZ1dXWEYxgG
      Pp8PDQ0NohNqLpeD2+1GXV0d4bxeL7xer+iEms/n4XK5UF9fT7jGxkb4fD7RCbVQKKC6uhoe
      jwdGo5Fwzc3Noi0IeFG2oaEBRqMR5XIZDQ0NaG1tleSsVquA83g8CAQCkuKxxWJBY2Mj4err
      69He3i4qHpdKJZjNZni9XhgMBsJ1dXVJirkmk4mE7FiWRV1dHYLBoKjozNfP8KE3lmVRW1uL
      YDAo6c9gMKCpqQl6vZ7s4Hp7eyXFXL1ej+bmZuj1erJjPHfunKR4rNVq0dLSQriamhqcP3/+
      0xaB+WKo169fQ6PRkFVOKpUSFXKVSiVomsbS0hJ0Oh0KhQIUCgVSqRQRwCpxarUaoVAIBoMB
      uVwOSqUSh4eHkpxGo0EoFILRaEQ6nZbF8SX5i4uLMJlMOD4+Bk3Tsji9Xo+FhQVYLBYcHh6C
      pmkcHR2JxoIpioLBYMD8/DysVitSqRQ0Gg22trYkOaPRiLm5OdhsNiQSCWg0Guzu7opyvFg9
      NzcHu92OeDwOnU6HRCIhGuvmK6tnZ2fhcDjIaiydTovG8quqqrC3t4doNEqK8uRwRqMR8Xgc
      0WgU8XicFNdIXU+9Xo9kMonNzU0kk0mBuComPup0OhweHiISiSCVShEfR0dHaGlpqchptVoc
      Hx9jY2MDR0dHAnG1qampIqdWq5HJZLCxsYHj42OBuColAudyOayvryOTyZAc/lQqJSkC5/N5
      rK2tIZfLEVH24OAADQ0NFTk+Y+jt27ek8BM46QMmJQIXi0W8efMGDMMQcTWZTKK9vV2U4xsI
      8otG/jzFfgdedF5dXRV0HT04OBC9niqVCizLYmVlRRDuOzg4EBXH+e+zvLwMpVJJ0sT/X4jA
      fK41wzAIBoOgaRqlUknQFbISt7i4iGKxiJ6eHtkcy7JYXFxEPp9Hb28v4aQqc9/l+JgewzAC
      1b4SFwqFkM1mSUxPLre0tIRMJoOenh4yQf5WHMdxpAVBT08PtFrtb869fv0aR0dHCAaD0Ol0
      KBaLkrHSQqGA6elpmM1mBAIBUikrJ/b86tUrmEwmtLW1nYmbnp6G0WhEe3u7bK5UKuHVq1cf
      xE1PT0Ov16O9vR1KpVI2NzMzA61Wi46Ojo/Czc7OQq1Wo7OzUzbHMAxmZmZA0zS6uroIJ0ck
      nZ2dJS05+DRLqeedYRjMzc2Boih0dXV9FG5+fh4A0N3dLZsrl8uYn58Hy7IIBoPiHPeJ2/r6
      Ore1tXVmLhKJcLFY7MxcNBrlNjc3z8zFYjEuEomcmdve3ubW19fPzO3s7HBv3749M7e3t8e9
      efPmzFw8HudWVlbOzCUSCW55efnM3MzMDJfL5T6Iy2azZ+ZmZ2c/Kjc3N8dlMpmPxs3Pz3Pp
      dPqjcQsLC9zx8fFH40KhEHd4eHhmbmlpiUulUmfmwuEwl0wmz8ytrKxw8Xj8zNzq6iq3v7//
      3vFPJgQEnKRJ/lwAikQiolsmMe60LdO7tru7+14RVjQalezfcRoXi8Uks4BO47a3t0/t8fGu
      7e3tvSdw7e7uSqY7nsbt7+9Lrsz29/ffE8bi8bhku4zTuGQyKVntfBq3ubkpujVnWRZbW1vv
      /d/RaFQ0r7sSt7m5Cb/fX5HjOA6xWOxX4yKRiGge+YdywMk1OI0TC8n8Ei4Wi73XEXVjY0M0
      312MEwsBiXEul0uU29raeq/jayQSEfR3ksttbGxIZidub2+/J9hvbGxIpvGexkUikVNDjZ/U
      BPDjjz+irq5OEDOWKigBTnr6uN1uwYWtFDN71/7973/D6XQKYvAHBweSEwDff+bnnNQEMDY2
      BpvNJhjwDw4OJCeAsbExWCwWgRbCN2cTs/HxcZhMJsGNmkwmJWsRnj17BqPRKODkXJeJiQno
      9XpBGm0qlZK8Ls+fP4dWqxV8Tqy6Fvjf7JpLly4JtsVS7RVYlv1F3MWLFwXhLCmO+58smc8+
      ++xMHHDSG+vChQuCiVcONzIygnPnzgka8Em1WAaA+/fvk9Arb1ItpHmuu7v7zNyDBw/Q2dkp
      WJDI4b7//nu0tbUJmuLJ5QKBgICTU6U+OjqK5uZmQW8jOf5GR0fh9/sFfcLk+Hv06BF8Pp+A
      q5TR+ElNANevX0ckEhG0WTUYDJI509evX8fa2pqAk3pZCs+trKwIuDdv3kiuWK9fv45wOCzg
      1tbWJFtPXL9+HYuLiwJuY2NDNJ2M5+bn5wXc5uam5EP9xz/+EdPT0wIuFouJprny3OTkpIDb
      3t4WzZLhuefPn+PcuXPkN+PfQCZmf/rTnzA+Pi7gpCYAmqZx+fJlWK1WgRgnlmIHnIhsV65c
      gdlsFqzcc7mc6H2mVCpx9epVGI1GgQgr9dtRFIWrV69Cp9MJdjRiqYfAiTh+7do1khknlwNO
      2oDzmXG8yXnZ0bVr18BxHDo6OsgxqTYlPFcul9HZ2Xkmrq+vD4VCAd3d3eSYnJem9PX1IZvN
      IhgMkmNyXs7T19eH4+Nj9Pb2kmNSzzrPpVIpQQW2nDqOvr4+JBIJwXMkp+nk9evXsbe3J+Aq
      dUL4pERgjuPea3fLP5hinQV/TS6fz4PjONHunr82x7Ks6Gr+NK5QKKBcLn8QxzCMaGbOaRz/
      ykY53LtdEj+UOzo6gsFgEH1g+JTVn68gpbjTvt+nzvEZQWJtuf/bOa1WK9oy5jQunU5Do9F8
      NC6TyZAXvvwa3Cc1Afxuv9vv9rv9bvLtP0//wRUHZ8yQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Natural Gas Vs Total Rig Count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='blabla' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
